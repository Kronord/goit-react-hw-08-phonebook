{"version":3,"file":"static/js/Contacts.351c19ee.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","../node_modules/spinners-react/src/SpinnerCircularSplit.tsx","components/ContactForm/ContactForm.styled.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","components/ContactForm/ContactForm.jsx","components/ListItem/ListItem.styled.js","components/ListItem/ListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","../node_modules/@mui/icons-material/AddCircleTwoTone.js","../node_modules/@mui/icons-material/DeleteTwoTone.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { CSSProperties } from 'react';\nimport { secondaryColorDefaultProps, SecondaryColorSpinnerProps } from './helpers';\nimport { SpinnersProps, withSharedProps } from './withSharedProps';\n\nimport './SpinnerCircularSplit.css';\n\nexport type SpinnerCircularSplitProps = SpinnersProps & SecondaryColorSpinnerProps;\n\nconst Component = ({\n  secondaryColor,\n  speed,\n  still,\n  thickness,\n  ...svgProps\n}: SecondaryColorSpinnerProps) => {\n  const strokeWidth = 4 * (thickness / 100);\n  const circleStyle: CSSProperties = !still\n    ? { animation: `spinners-react-circular-split ${140 / speed}s linear infinite` }\n    : {};\n\n  return (\n    <svg fill=\"none\" {...svgProps} viewBox=\"0 0 66 66\">\n      <circle\n        cx=\"33\"\n        cy=\"33\"\n        fill=\"none\"\n        r=\"28\"\n        stroke={secondaryColor}\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        cx=\"33\"\n        cy=\"33\"\n        fill=\"none\"\n        r=\"28\"\n        stroke=\"currentColor\"\n        strokeDasharray=\"5, 170\"\n        strokeDashoffset=\"1\"\n        strokeLinecap=\"round\"\n        strokeWidth={strokeWidth}\n        style={circleStyle}\n        transform=\"rotate(-90 33 33)\"\n      />\n    </svg>\n  );\n};\n\nComponent.defaultProps = secondaryColorDefaultProps;\n\nexport const SpinnerCircularSplit = withSharedProps(Component);\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\nimport { TextField } from '@mui/material';\n\nexport const StyledButton = styled(Button)`\n  position: fixed;\n  left: 94%;\n  top: 85%;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  position: relative;\n  width: 400px;\n  flex-direction: column;\n  align-self: center;\n  align-items: center;\n`;\n\nexport const Input = styled(TextField)`\n  width: 350px;\n`;\n\nexport const SubmitButton = styled(Button)`\n  margin-top: 30px;\n`;\n\nexport const Title = styled.p`\ntext-align: center;\ntext-transform: uppercase;\n  margin: 0 0 18px;\n  font-size: 20px;\n  color: #4169e1;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    margin: auto;\n    width: 300px;\n    height: 300px;\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import PropTypes from 'prop-types';\nimport { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SpinnerCircularSplit } from 'spinners-react';\nimport * as contactsOperations from '../Redux/Contacts/Contacts-operations';\nimport {\n  StyledButton,\n  Form,\n  Input,\n  SubmitButton,\n  Title,\n  Image,\n} from './ContactForm.styled';\nimport Modal from '@mui/material/Modal';\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\nimport Box from '@mui/material/Box';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  borderRadius: '20px',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const ContactForm = () => {\n  const [newName, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactsState = useSelector(state => state.contacts.entities);\n  const loading = useSelector(state => state.contacts.loading);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhoneNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newObj = { id: nanoid(), name: newName, number: phoneNumber };\n    if (\n      contactsState.find(\n        ({ name }) => name.toLowerCase() === newName.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${newName} is already in contacts`);\n    }\n    dispatch(contactsOperations.createContact(newObj));\n    setName('');\n    setPhoneNumber('');\n  };\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <StyledButton variant=\"contained\" onClick={handleOpen}>\n        <AddCircleTwoToneIcon\n          sx={{\n            fontSize: 50,\n          }}\n        />\n      </StyledButton>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Image\n            src=\"https://invent.kde.org/uploads/-/system/project/avatar/120/phonebook.svg.png\"\n            alt=\"phonebook\"\n          />\n          <Title>Add contact to your personal PhoneBook</Title>\n          <Form onSubmit={handleSubmit}>\n            <Input\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              id={nameInputId}\n              name=\"name\"\n              value={newName}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <Input\n              label=\"Number\"\n              type=\"tel\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              id={numberInputId}\n              name=\"number\"\n              value={phoneNumber}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <SubmitButton\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={loading === 'adding' ? true : false}\n            >\n              {loading === 'adding' ? (\n                <SpinnerCircularSplit\n                  size={25}\n                  thickness={180}\n                  speed={100}\n                  color=\"rgba(57, 74, 172, 1)\"\n                  secondaryColor=\"rgba(0, 0, 0, 0.44)\"\n                />\n              ) : (\n                'Add Contact'\n              )}\n            </SubmitButton>\n          </Form>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\n\nexport const Item = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 20px;\n  border-radius: 10px;\n  color: #4169e1;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nexport const Text = styled.p`\n  width: 200px;\n  font-size: 20px;\n  font-weight: bold;\n  margin-right: 200px;\n`;\n\nexport const StyledButton = styled(Button)`\n  margin-left: auto;\n`","import propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SpinnerCircularSplit } from 'spinners-react';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport { Item, Text, StyledButton } from './ListItem.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsOperations from '../Redux/Contacts/Contacts-operations';\n\nconst ListItem = ({ name, number, id }) => {\n  const [btnId, setBtnId] = useState(null);\n  const loading = useSelector(state => state.contacts.loading);\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Text>{name}:</Text>\n      <Text>{number}</Text>\n      <StyledButton\n        onClick={() => {\n          setBtnId(id)\n          dispatch(contactsOperations.deleteContact({ id, name }))\n        }}\n        disabled={loading === 'delete' ? true : false}\n      >\n        {loading === 'delete' && btnId !== null ? (\n          <SpinnerCircularSplit\n            size={40}\n            thickness={180}\n            speed={100}\n            color=\"rgba(57, 74, 172, 1)\"\n            secondaryColor=\"rgba(0, 0, 0, 0.44)\"\n          />\n        ) : (\n            <DeleteTwoToneIcon sx={{\n              fontSize: 50,\n            }}/>\n        )}\n      </StyledButton>\n    </Item>\n  );\n};\n\nListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n};\n\nexport default ListItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 30px 100px 30px 30px;\n  padding: 0;\n`;\n\nexport const Box = styled.div`\n    width: 100%;\n    margin-top: 200px;\n`;","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SpinnerDotted } from 'spinners-react';\nimport ListItem from '../ListItem/ListItem';\nimport { useDispatch } from 'react-redux';\nimport * as contactsOperations from 'components/Redux/Contacts/Contacts-operations';\nimport { List, Box } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const dataState = useSelector(state => state.contacts.entities);\n  const filterState = useSelector(state => state.filter);\n  const loading = useSelector(state => state.contacts.loading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts(''));\n  }, [dispatch]);\n\n  if (loading === 'succeeded' || loading === 'delete' || loading === 'adding') {\n    const normalizedFilter = filterState.toLowerCase();\n    const filterContacts = dataState.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <List>\n        {filterContacts.map(({ name, id, number }) => (\n          <ListItem key={id} name={name} number={number} id={id} />\n        ))}\n      </List>\n    );\n  }\n\n  if (loading === 'pending') {\n    return (\n      <Box>\n        <SpinnerDotted\n          size={70}\n          thickness={100}\n          speed={121}\n          color=\"rgba(57, 119, 172, 1)\"\n          style={{\n            display: 'block',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        />\n      </Box>\n    );\n  }\n\n  if (loading === 'failed') {\n    return <h1>Contacts not found</h1>;\n  }\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-left: 30px;\n  align-items: center;\n  padding: 20px;\n  width: 600px;\n  background-color: #4169e1b3;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  color: rgb(255, 255, 255);\n`;\n\nexport const Input = styled.input`\n  margin-left: 30px;\n  width: 350px;\n  border: none;\n  height: 25px;\n  border-radius: 10px;\n  outline: none;\n`;","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { change } from 'components/Redux/Filter/slice';\nimport { Wrapper, Input, Label } from './Filter.styled';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterState = useSelector(state => state.contacts.filter);\n\n  const filterStateChange = evt => {\n    dispatch(change(evt.target.value));\n  };\n\n  return (\n    <Wrapper>\n      <Label htmlFor={nanoid()}>\n        Find contacts by name\n      </Label>\n      <Input\n        type=\"text\"\n        id={nanoid()}\n        value={filterState}\n        onChange={filterStateChange}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin-top: 50px;\n`;","import { ContactForm } from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Wrapper } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\n\nexport default function Contacts() {\n  const contactsState = useSelector(state => state.contacts.entities);\n  return (\n    <Wrapper>\n      {contactsState.length > 0 && <Filter />}\n      <ContactList />\n      <ContactForm />\n    </Wrapper>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm5 9h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}, \"1\")], 'AddCircleTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 9h8v10H8z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m15.5 4-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"\n}, \"1\")], 'DeleteTwoTone');\n\nexports.default = _default;"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Component","_a","secondaryColor","speed","still","thickness","svgProps","strokeWidth","circleStyle","animation","React","fill","viewBox","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","style","transform","defaultProps","secondaryColorDefaultProps","SpinnerCircularSplit","withSharedProps","StyledButton","styled","Button","Form","Input","TextField","SubmitButton","Title","Image","_excluded","extendSxProp","props","finalSx","inSx","sx","result","systemProps","otherProps","Object","keys","forEach","prop","propToStyleFunction","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","inProps","ref","theme","useTheme","_extendSxProp","className","component","other","_jsx","as","clsx","createBox","createTheme","ClassNameGenerator","position","top","left","width","bgcolor","borderRadius","boxShadow","p","ContactForm","useState","newName","setName","phoneNumber","setPhoneNumber","dispatch","useDispatch","contactsState","useSelector","state","contacts","entities","loading","nameInputId","numberInputId","handleChange","event","target","name","value","open","setOpen","variant","onClick","AddCircleTwoTone","fontSize","Modal","onClose","src","alt","onSubmit","preventDefault","newObj","number","find","toLowerCase","toast","contactsOperations","label","margin","onChange","pattern","title","required","type","color","disabled","Item","Text","btnId","setBtnId","DeleteTwoTone","List","dataState","filterState","filter","useEffect","normalizedFilter","filterContacts","contact","includes","map","SpinnerDotted","display","marginLeft","marginRight","Wrapper","Label","htmlFor","evt","change","Contacts","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity"],"sourceRoot":""}